{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport { GlobalFormProvider } from \"../contexts/FormContext\";\nimport Container from '@material-ui/core/Container';\nimport MainNavbar from \"../components/MainNavbar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport '../public/css/global.css';\nimport { ThemeProvider } from 'styled-components';\nconst theme = {\n  colors: {\n    primary: '#0070f3'\n  }\n};\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(React.Fragment, null, __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(GlobalFormProvider, null, __jsx(MainNavbar, null), __jsx(Component, pageProps))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["D:/Projects/insurdinary/pages/_app.js"],"names":["React","App","GlobalFormProvider","Container","MainNavbar","ThemeProvider","theme","colors","primary","MyApp","Component","pageProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAAQC,kBAAR,QAAiC,yBAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,sCAAP;AACA,OAAO,4CAAP;AACA,OAAO,+CAAP;AACA,OAAO,0CAAP;AACA,OAAO,2BAAP;AACA,OAAO,0BAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,MAAMC,KAAK,GAAG;AACNC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AADF,CAAd;;AAMA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,SACI,4BACA,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEL;AAAtB,KACgB,MAAC,kBAAD,QACQ,MAAC,UAAD,OADR,EAEQ,MAAC,SAAD,EAAeK,SAAf,CAFR,CADhB,CADA,CADJ;AAUH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport {GlobalFormProvider} from \"../contexts/FormContext\";\r\nimport Container from '@material-ui/core/Container';\r\nimport MainNavbar from \"../components/MainNavbar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport '../public/css/global.css';\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nconst theme = {\r\n        colors: {\r\n          primary: '#0070f3',\r\n        },\r\n      }\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n    return (\r\n        <>\r\n        <ThemeProvider theme={theme}>\r\n                        <GlobalFormProvider>\r\n                                <MainNavbar/>\r\n                                <Component {...pageProps} />\r\n                        </GlobalFormProvider>\r\n                        </ThemeProvider>\r\n        </>\r\n        )\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp\r\n"]},"metadata":{},"sourceType":"module"}