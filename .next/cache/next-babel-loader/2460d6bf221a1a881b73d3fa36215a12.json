{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nimport Modal from \"react-bootstrap/Modal\";\nexport default function rentOrOwnForm() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useContext(DispatchContext);\n\n  var _useState = useState(''),\n      lifeInsurance = _useState[0],\n      setLifeInsurance = _useState[1]; //has life insurance\n\n\n  var _useState2 = useState(''),\n      lifeInsuranceEmployer = _useState2[0],\n      setLifeInsuranceEmployer = _useState2[1];\n\n  var _useState3 = useState(''),\n      lifeInsurancePersonal = _useState3[0],\n      setLifeInsurancePersonal = _useState3[1];\n\n  var _useState4 = useState(false),\n      showHasLifeInsurance = _useState4[0],\n      setShowHasLifeInsurance = _useState4[1];\n\n  var handleCloseHasLifeInsurance = function handleCloseHasLifeInsurance() {\n    return setShowHasLifeInsurance(false);\n  };\n\n  var _useState5 = useState(false),\n      showExistingLifeInsurance = _useState5[0],\n      setShowExistingLifeInsurance = _useState5[1];\n\n  var handleCloseExistingLifeInsurance = function handleCloseExistingLifeInsurance() {\n    return setShowExistingLifeInsurance(false);\n  }; // progress bar\n\n\n  var now = 75;\n\n  var progressInstance = __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    now: now\n  });\n\n  useEffect(function () {\n    dispatch({\n      type: \"LIFE_INSURANCE\",\n      lifeInsurance: lifeInsurance\n    });\n\n    if (lifeInsurance === false) {\n      dispatch({\n        type: \"LIFE_INSURANCE_EMPLOYER\",\n        lifeInsuranceEmployer: 0\n      });\n      dispatch({\n        type: \"LIFE_INSURANCE_PERSONAL\",\n        lifeInsurancePersonal: 0\n      });\n    }\n  }, [lifeInsurance]);\n  useEffect(function () {\n    dispatch({\n      type: \"LIFE_INSURANCE_EMPLOYER\",\n      lifeInsuranceEmployer: lifeInsuranceEmployer\n    });\n  }, [lifeInsuranceEmployer]);\n  useEffect(function () {\n    dispatch({\n      type: \"LIFE_INSURANCE_PERSONAL\",\n      lifeInsurancePersonal: lifeInsurancePersonal\n    });\n  }, [lifeInsurancePersonal]);\n  return __jsx(\"div\", {\n    style: {\n      overflowX: \"hidden\"\n    }\n  }, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 10,\n      offset: 1\n    },\n    md: {\n      span: 10,\n      offset: 1\n    },\n    lg: {\n      span: 10,\n      offset: 1\n    }\n  }, progressInstance)), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(\"h3\", {\n    className: \"header\"\n  }, \"Do you have life insurance?\")), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 30,\n    onClick: function onClick() {\n      setShowHasLifeInsurance(true);\n    },\n    style: {\n      position: 'relative',\n      top: '18px',\n      right: '100%'\n    }\n  }))), __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: function onClick() {\n      setLifeInsurance(true);\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"Yes\"), \" \"), __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: function onClick() {\n      setLifeInsurance(false);\n      router.push('/savings');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"No\"), \" \")), lifeInsurance ? __jsx(React.Fragment, null, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 1\n    },\n    md: {\n      span: 2,\n      offset: 2\n    },\n    lg: {\n      span: 2,\n      offset: 2\n    }\n  }, __jsx(\"h5\", {\n    className: \"h5\"\n  }, \"Employer Life Insurance\")), __jsx(Col, {\n    xs: {\n      span: 6\n    },\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 6\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(InputGroup.Prepend, null, __jsx(InputGroup.Text, null, \"$\")), __jsx(FormControl, {\n    placeholder: \"Employer Life Insurance\",\n    \"aria-label\": \"Employer Life Insurance\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: function onChange(e) {\n      setLifeInsuranceEmployer(parseInt(e.target.value));\n    }\n  })))), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 1\n    },\n    md: {\n      span: 2,\n      offset: 2\n    },\n    lg: {\n      span: 2,\n      offset: 2\n    }\n  }, __jsx(\"h5\", {\n    className: \"h5\"\n  }, \"Personal Life Insurance\")), __jsx(Col, {\n    xs: {\n      span: 6\n    },\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 6\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(InputGroup.Prepend, null, __jsx(InputGroup.Text, null, \"$\")), __jsx(FormControl, {\n    placeholder: \"Personal Life Insurance\",\n    \"aria-label\": \"Personal Life Insurance\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: function onChange(e) {\n      setLifeInsurancePersonal(parseInt(e.target.value));\n    }\n  })))), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\",\n    onClick: function onClick() {\n      router.push('/savings');\n    }\n  }, \"Next\"), \" \"))) : null, __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 11\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    },\n    onClick: function onClick() {\n      setShowExistingLifeInsurance(true);\n    }\n  }, __jsx(\"h5\", {\n    className: \"header\"\n  }, __jsx(\"u\", null, \"Why do you ask about my existing life insurance?\"))), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 25,\n    onClick: function onClick() {\n      setShowExistingLifeInsurance(true);\n    },\n    style: {\n      position: 'relative',\n      top: '12px',\n      right: '35px'\n    }\n  })))), __jsx(Modal, {\n    show: showHasLifeInsurance,\n    onHide: handleCloseHasLifeInsurance\n  }, __jsx(Modal.Body, null, \"Select \\u201CYes\\u201D if you already have life insurance coverage in place, but select \\u201CNo\\u201D if you don\\u2019t have existing life insurance or if your policies are expiring soon. This would include both policies you have through work or policies that you\\u2019ve purchased individually through a broker.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseHasLifeInsurance\n  }, \"Close\"))), __jsx(Modal, {\n    show: showExistingLifeInsurance,\n    onHide: handleCloseExistingLifeInsurance\n  }, __jsx(Modal.Body, null, \"If you already have life insurance, we will reduce the coverage amount of your new policy by the amount of coverage already in place. This will make sure that the total amount of coverage between all your policies is in line with your needs.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseExistingLifeInsurance\n  }, \"Close\"))));\n}\n\n_s(rentOrOwnForm, \"lPX9vVdXDJhj935wP/3OCsraLrU=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["D:/Projects/insurdinary/components/LifeInsuranceForm.js"],"names":["React","useContext","useEffect","useState","useRouter","Button","Container","Row","Col","DispatchContext","ProgressBar","InputGroup","FormControl","QuestionCircle","Modal","rentOrOwnForm","router","dispatch","lifeInsurance","setLifeInsurance","lifeInsuranceEmployer","setLifeInsuranceEmployer","lifeInsurancePersonal","setLifeInsurancePersonal","showHasLifeInsurance","setShowHasLifeInsurance","handleCloseHasLifeInsurance","showExistingLifeInsurance","setShowExistingLifeInsurance","handleCloseExistingLifeInsurance","now","progressInstance","height","type","overflowX","span","offset","position","top","right","width","push","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { DispatchContext } from \"../contexts/FormContext\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport {QuestionCircle} from \"react-bootstrap-icons\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function rentOrOwnForm() {\r\n    const router = useRouter();\r\n    const dispatch = useContext(DispatchContext);\r\n    const [lifeInsurance, setLifeInsurance] = useState('');\r\n    //has life insurance\r\n    const [lifeInsuranceEmployer, setLifeInsuranceEmployer] = useState('');\r\n    const [lifeInsurancePersonal, setLifeInsurancePersonal] = useState('');\r\n    const [showHasLifeInsurance, setShowHasLifeInsurance] = useState(false);\r\n    const handleCloseHasLifeInsurance = () => setShowHasLifeInsurance(false);\r\n    const [showExistingLifeInsurance, setShowExistingLifeInsurance] = useState(false);\r\n    const handleCloseExistingLifeInsurance = () => setShowExistingLifeInsurance(false);\r\n\r\n    // progress bar\r\n    const now = 75;\r\n    const progressInstance = <ProgressBar style={{height: '0.5rem'}} now={now} />;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"LIFE_INSURANCE\", lifeInsurance: lifeInsurance });\r\n        if (lifeInsurance === false) {\r\n            dispatch({ type: \"LIFE_INSURANCE_EMPLOYER\", lifeInsuranceEmployer: 0 });\r\n            dispatch({ type: \"LIFE_INSURANCE_PERSONAL\", lifeInsurancePersonal: 0 });\r\n        }\r\n    }, [lifeInsurance]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"LIFE_INSURANCE_EMPLOYER\", lifeInsuranceEmployer: lifeInsuranceEmployer });\r\n    }, [lifeInsuranceEmployer]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"LIFE_INSURANCE_PERSONAL\", lifeInsurancePersonal: lifeInsurancePersonal });\r\n    }, [lifeInsurancePersonal]);\r\n\r\n    return (\r\n        <div style={{overflowX: \"hidden\"}}>\r\n            <br />\r\n            <Row>\r\n                <Col\r\n                    xs={{ span: 10, offset: 1 }}\r\n                    md={{ span: 10, offset: 1 }}\r\n                    lg={{ span: 10, offset: 1 }}\r\n                >\r\n                    {progressInstance}\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col xs={{span: 8, offset: 2}} md={{ span: 6, offset: 3 }} lg={{ span: 6, offset: 3 }}>\r\n                    <h3 className=\"header\">Do you have life insurance?</h3>\r\n                </Col>\r\n                <Col xs={1} md={1} lg={1}>\r\n                    <QuestionCircle\r\n                        size={30}\r\n                        onClick={() => {setShowHasLifeInsurance(true)}}\r\n                        style={{position: 'relative', top: '18px', right: '100%'}}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={6} md={{ span: 6 }} lg={{ span: 3, offset: 3 }}>\r\n                        <Button\r\n                            className=\"align-button\"\r\n                            onClick={() => {\r\n                                setLifeInsurance(true);\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                            variant=\"outline-primary\"\r\n                            size=\"lg\"\r\n                        >\r\n                            Yes\r\n                        </Button>{\" \"}\r\n                    </Col>\r\n                    <Col xs={6} md={{ span: 6 }} lg={{ span: 3 }}>\r\n                        <Button\r\n                            className=\"align-button\"\r\n                            onClick={() => {\r\n                                setLifeInsurance(false);\r\n                                router.push('/savings');\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                            variant=\"outline-primary\"\r\n                            size=\"lg\"\r\n                        >\r\n                            No\r\n                        </Button>{\" \"}\r\n                    </Col>\r\n                </Row>\r\n                <Choose>\r\n                    <When condition={lifeInsurance}>\r\n                        <>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col\r\n                                    xs={{ span: 4, offset: 1 }}\r\n                                    md={{ span: 2, offset: 2 }}\r\n                                    lg={{ span: 2, offset: 2 }}\r\n                                >\r\n                                    <h5 className=\"h5\">Employer Life Insurance</h5>\r\n                                </Col>\r\n                                <Col\r\n                                    xs={{ span: 6 }}\r\n                                    md={{ span: 6 }}\r\n                                    lg={{ span: 6 }}\r\n                                >\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text>$</InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            placeholder=\"Employer Life Insurance\"\r\n                                            aria-label=\"Employer Life Insurance\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            onChange={(e) => {\r\n                                                setLifeInsuranceEmployer(parseInt(e.target.value))\r\n                                            }}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col\r\n                                    xs={{ span: 4, offset: 1 }}\r\n                                    md={{ span: 2, offset: 2 }}\r\n                                    lg={{ span: 2, offset: 2 }}\r\n                                >\r\n                                    <h5 className=\"h5\">Personal Life Insurance</h5>\r\n                                </Col>\r\n                                <Col\r\n                                    xs={{ span: 6 }}\r\n                                    md={{ span: 6 }}\r\n                                    lg={{ span: 6 }}\r\n                                >\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text>$</InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            placeholder=\"Personal Life Insurance\"\r\n                                            aria-label=\"Personal Life Insurance\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            onChange={(e) => {setLifeInsurancePersonal(parseInt(e.target.value))}}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <br />\r\n                            <Row>\r\n                                <Col\r\n                                    xs={{ span: 8, offset: 2 }}\r\n                                    md={{ span: 6, offset: 3 }}\r\n                                    lg={{ span: 6, offset: 3 }}\r\n                                >\r\n                                    <Button\r\n                                        style={{ width: \"100%\" }}\r\n                                        variant=\"outline-primary\"\r\n                                        size=\"lg\"\r\n                                        onClick={()=> {router.push('/savings')}}\r\n                                    >\r\n                                        Next\r\n                                    </Button>{\" \"}\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    </When>\r\n                </Choose>\r\n                <Row>\r\n                    <Col\r\n                        xs={{ span: 11 }}\r\n                        md={{ span: 6, offset: 3 }}\r\n                        lg={{ span: 6, offset: 3 }}\r\n                        onClick={() => {setShowExistingLifeInsurance(true)}}\r\n                    >\r\n                        <h5 className=\"header\"><u>Why do you ask about my existing life insurance?</u></h5>\r\n                    </Col>\r\n                    <Col xs={1} md={1} lg={1}>\r\n                        <QuestionCircle\r\n                            size={25}\r\n                            onClick={() => {setShowExistingLifeInsurance(true)}}\r\n                            style={{position: 'relative', top: '12px', right: '35px'}}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {/*title*/}\r\n            <Modal show={showHasLifeInsurance} onHide={handleCloseHasLifeInsurance}>\r\n                <Modal.Body>Select “Yes” if you already have life insurance coverage in place, but select “No” if you don’t have existing life insurance or if your policies are expiring soon. This would include both policies you have through work or policies that you’ve purchased individually through a broker.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-primary\" onClick={handleCloseHasLifeInsurance}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/*ask about existing insurance*/}\r\n            <Modal show={showExistingLifeInsurance} onHide={handleCloseExistingLifeInsurance}>\r\n                <Modal.Body>If you already have life insurance, we will reduce the coverage amount of your new policy by the amount of coverage already in place. This will make sure that the total amount of coverage between all your policies is in line with your needs.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-primary\" onClick={handleCloseExistingLifeInsurance}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}