{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport { DispatchContext, FormContext } from \"../contexts/FormContext\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { v4 as uuid } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container, TextField, CssBaseline } from '@material-ui/core';\nexport default function PersonalInformationForm() {\n  const router = useRouter();\n  const dispatch = useContext(DispatchContext);\n  const form = useContext(FormContext);\n  const {\n    0: nameFirst,\n    1: setNameFirst\n  } = useState('');\n  const {\n    0: nameLast,\n    1: setNameLast\n  } = useState('');\n  const {\n    0: nameEmail,\n    1: setNameEmail\n  } = useState('');\n  const {\n    0: namePhone,\n    1: setNamePhone\n  } = useState('');\n  const {\n    0: isNext,\n    1: setIsNext\n  } = useState(true);\n  dispatch({\n    type: \"ID\",\n    id: uuid()\n  });\n  useEffect(() => {\n    if (nameFirst !== form.nameFirst) {\n      setNameFirst(form.nameFirst ? form.nameFirst : '');\n    }\n\n    if (nameLast !== form.nameLast) {\n      setNameLast(form.nameLast ? form.nameLast : '');\n    }\n\n    if (nameEmail !== form.nameEmail) {\n      setNameEmail(form.nameEmail ? form.nameEmail : '');\n    }\n\n    if (namePhone !== form.namePhone) {\n      setNamePhone(form.namePhone ? form.namePhone : '');\n    }\n  }, []);\n  useEffect(() => {\n    if (nameFirst !== '' && nameLast !== '' && nameEmail !== '' && namePhone !== '') {\n      setIsNext(false);\n    } else {\n      setIsNext(true);\n    }\n  }, [nameFirst, nameLast, nameEmail, namePhone]);\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: theme.spacing(2)\n    },\n    menu: {\n      width: 200\n    },\n    button: {\n      marginTop: theme.spacing(5),\n      textAlign: 'center'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  }));\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    router.push('/spouseForm');\n  }; // progress bar\n\n\n  const now = 0;\n  return __jsx(React.Fragment, null, __jsx(CssBaseline, null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      margin: '10px auto'\n    }\n  }, __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    animated: true,\n    striped: true,\n    variant: \"info\",\n    label: `${now}% Done`,\n    now: now\n  })), __jsx(Container, {\n    maxWidth: \"sm\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"h4\", {\n    className: \"header\"\n  }, \"Please enter some information in case we get disconnected\")), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"form\", {\n    className: classes.container,\n    autoComplete: \"off\",\n    onSubmit: e => {\n      handleSubmit(e);\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.paper\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    id: \"first_name\",\n    label: \"First Name\",\n    className: classes.textField,\n    value: nameFirst,\n    onChange: e => {\n      setNameFirst(e.target.value);\n    },\n    onBlur: () => {\n      dispatch({\n        type: \"NAME_FIRST\",\n        nameFirst: nameFirst\n      });\n    }\n  })), __jsx(\"br\", null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.paper\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    id: \"last_name\",\n    label: \"Last Name\",\n    className: classes.textField,\n    value: nameLast,\n    onChange: e => {\n      setNameLast(e.target.value);\n    },\n    onBlur: () => {\n      dispatch({\n        type: \"NAME_LAST\",\n        nameLast: nameLast\n      });\n    }\n  })), __jsx(\"br\", null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.paper\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: classes.textField,\n    value: nameEmail,\n    onChange: e => {\n      setNameEmail(e.target.value);\n    },\n    onBlur: e => {\n      dispatch({\n        type: \"NAME_EMAIL\",\n        nameEmail: nameEmail\n      });\n    }\n  })), __jsx(\"br\", null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.paper\n  }, __jsx(TextField, {\n    required: true,\n    fullWidth: true,\n    id: \"phone\",\n    label: \"Phone\",\n    type: \"number\",\n    className: classes.textField,\n    value: namePhone,\n    onChange: e => {\n      setNamePhone(e.target.value);\n    },\n    onBlur: e => {\n      dispatch({\n        type: \"NAME_PHONE\",\n        namePhone: namePhone\n      });\n    }\n  })), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.button\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4\n  }, __jsx(Button, {\n    as: \"input\",\n    type: \"submit\",\n    value: \"Next\",\n    variant: \"contained\",\n    style: {\n      width: \"100%\"\n    },\n    disabled: isNext\n  }))))))));\n}","map":{"version":3,"sources":["D:/Projects/insurdinary/components/PersonalInformationForm.js"],"names":["React","useContext","useEffect","useState","useRouter","Button","DispatchContext","FormContext","ProgressBar","v4","uuid","makeStyles","Grid","Container","TextField","CssBaseline","PersonalInformationForm","router","dispatch","form","nameFirst","setNameFirst","nameLast","setNameLast","nameEmail","setNameEmail","namePhone","setNamePhone","isNext","setIsNext","type","id","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","button","textAlign","paper","padding","color","palette","text","secondary","classes","handleSubmit","e","preventDefault","push","now","margin","height","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { DispatchContext, FormContext } from \"../contexts/FormContext\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Container, TextField, CssBaseline} from '@material-ui/core';\r\n\r\nexport default function PersonalInformationForm() {\r\n    const router = useRouter();\r\n    const dispatch = useContext(DispatchContext);\r\n    const form = useContext(FormContext);\r\n    const [nameFirst, setNameFirst] = useState('');\r\n    const [nameLast, setNameLast] = useState('');\r\n    const [nameEmail, setNameEmail] = useState('');\r\n    const [namePhone, setNamePhone] = useState('');\r\n    const [isNext, setIsNext] = useState(true);\r\n\r\n    dispatch({ type: \"ID\", id: uuid() });\r\n\r\n    useEffect(() => {\r\n\r\n        if(nameFirst !== form.nameFirst){\r\n            setNameFirst(form.nameFirst ? form.nameFirst : '');\r\n        }\r\n\r\n        if(nameLast !== form.nameLast){\r\n            setNameLast(form.nameLast ? form.nameLast : '');\r\n        }\r\n\r\n        if(nameEmail !== form.nameEmail){\r\n            setNameEmail(form.nameEmail ? form.nameEmail : '');\r\n        }\r\n\r\n        if(namePhone !== form.namePhone){\r\n            setNamePhone(form.namePhone ? form.namePhone : '');\r\n        }\r\n\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if(nameFirst !== '' && nameLast !== '' && nameEmail !== '' && namePhone !== ''){\r\n            setIsNext(false);\r\n        }else{\r\n            setIsNext(true);\r\n        }\r\n    }, [nameFirst, nameLast, nameEmail, namePhone]);\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        container: {\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n          marginLeft: theme.spacing(1),\r\n          marginRight: theme.spacing(1),\r\n        },\r\n        dense: {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        menu: {\r\n          width: 200,\r\n        },\r\n          button: {\r\n            marginTop: theme.spacing(5),\r\n            textAlign:'center'\r\n          },\r\n          paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n          },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        router.push('/spouseForm')\r\n    }\r\n\r\n    // progress bar\r\n    const now = 0;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Grid item xs={12} style={{margin:'10px auto'}}>\r\n\t\t\t    <ProgressBar style={{height: '0.5rem'}} animated striped variant=\"info\" label={`${now}% Done`} now={now} />\r\n            </Grid>\r\n            <Container maxWidth=\"sm\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <h4 className=\"header\">Please enter some information in case we get disconnected</h4>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <form className={classes.container} autoComplete=\"off\" onSubmit={(e)=>{handleSubmit(e)}}>\r\n                            <Grid item xs={12} sm={6} className={classes.paper}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"first_name\"\r\n                                    label=\"First Name\"\r\n                                    className={classes.textField}\r\n                                    value={nameFirst}\r\n                                    onChange={(e) => {\r\n                                        setNameFirst(e.target.value);\r\n                                    }}\r\n                                    onBlur={()=>{\r\n                                        dispatch({ type: \"NAME_FIRST\", nameFirst: nameFirst});\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                                <br />\r\n                                <Grid item xs={12} sm={6} className={classes.paper}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"last_name\"\r\n                                    label=\"Last Name\"\r\n                                    className={classes.textField}\r\n                                    value={nameLast}\r\n                                    onChange={(e) => {\r\n                                        setNameLast(e.target.value);\r\n                                    }}\r\n                                    onBlur={()=>{\r\n                                        dispatch({ type: \"NAME_LAST\", nameLast: nameLast });\r\n                                    }}\r\n                                />\r\n\r\n                                </Grid>\r\n                                <br />\r\n                                <Grid item xs={12} sm={6} className={classes.paper}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    type=\"email\"\r\n                                    className={classes.textField}\r\n                                    value={nameEmail}\r\n                                    onChange={(e) => {\r\n                                        setNameEmail(e.target.value);\r\n                                    }}\r\n                                    onBlur={(e)=>{\r\n                                        dispatch({type: \"NAME_EMAIL\", nameEmail: nameEmail});\r\n                                    }}\r\n                                />\r\n                                </Grid>\r\n                                <br />\r\n                                <Grid item xs={12} sm={6} className={classes.paper}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"phone\"\r\n                                    label=\"Phone\"\r\n                                    type=\"number\"\r\n                                    className={classes.textField}\r\n                                    value={namePhone}\r\n                                    onChange={(e) => {\r\n                                        setNamePhone(e.target.value);\r\n                                    }}\r\n                                    onBlur={(e)=>{\r\n                                        dispatch({type: \"NAME_PHONE\", namePhone: namePhone});\r\n                                    }}\r\n                                /></Grid>\r\n                                <br />\r\n                                <br />\r\n                                <Grid container justify=\"center\" alignItems=\"center\" className={classes.button}>\r\n                                    <Grid item xs={12} sm={4} >\r\n                                        <Button as=\"input\" type=\"submit\" value=\"Next\" variant=\"contained\" style={{ width: \"100%\" }} disabled={isNext}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </Grid>\r\n                    </Grid>   \r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}