{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { GlobalFormProvider } from \"../contexts/FormContext\";\nimport Container from '@material-ui/core/Container';\nimport MainNavbar from \"../components/MainNavbar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport '../public/css/global.css';\nimport { ThemeProvider } from 'styled-components';\nvar theme = {\n  colors: {\n    primary: '#0070f3'\n  }\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(Container, {\n        maxWidth: \"lg\"\n      }, __jsx(GlobalFormProvider, null, __jsx(MainNavbar, null), __jsx(Component, pageProps))));\n    }\n  }]);\n\n  return MyApp;\n}(App); // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n//export default MyApp\n\n\nexport { MyApp as default };","map":{"version":3,"sources":["D:/Projects/insurdinary/pages/_app.js"],"names":["React","App","GlobalFormProvider","Container","MainNavbar","ThemeProvider","theme","colors","primary","MyApp","props","Component","pageProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAAQC,kBAAR,QAAiC,yBAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,sCAAP;AACA,OAAO,4CAAP;AACA,OAAO,+CAAP;AACA,OAAO,0CAAP;AACA,OAAO,2BAAP;AACA,OAAO,0BAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,IAAMC,KAAK,GAAG;AACNC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AADF,CAAd;;IAMqBC,K;;;;;;;;;;;;;6BACJ;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAEP,aACM,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEN;AAAtB,SACA,MAAC,SAAD;AAAW,QAAA,QAAQ,EAAC;AAApB,SACQ,MAAC,kBAAD,QACQ,MAAC,UAAD,OADR,EAEQ,MAAC,SAAD,EAAeM,SAAf,CAFR,CADR,CADA,CADN;AAUD;;;;EAb0BX,G,GAgBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;SA5BqBQ,K","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport {GlobalFormProvider} from \"../contexts/FormContext\";\r\nimport Container from '@material-ui/core/Container';\r\nimport MainNavbar from \"../components/MainNavbar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport '../public/css/global.css';\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nconst theme = {\r\n        colors: {\r\n          primary: '#0070f3',\r\n        },\r\n      }\r\n\r\nexport default class MyApp extends App {\r\n        render() {\r\n          const { Component, pageProps } = this.props\r\n          return (\r\n                <ThemeProvider theme={theme}>\r\n                <Container maxWidth=\"lg\">\r\n                        <GlobalFormProvider>\r\n                                <MainNavbar/>\r\n                                <Component {...pageProps} />\r\n                        </GlobalFormProvider>\r\n                </Container>\r\n        </ThemeProvider>\r\n          )\r\n        }\r\n      }\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\n//export default MyApp\r\n"]},"metadata":{},"sourceType":"module"}