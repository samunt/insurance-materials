{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport DatePicker from \"react-datepicker\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nimport { Modal, ProgressBar, Button, Form, Col, Row } from \"react-bootstrap\";\nimport { Grid, Container, TextField, CssBaseline } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nexport default function DobForm() {\n  const router = useRouter();\n  const dispatch = useContext(DispatchContext);\n  const {\n    0: showDob,\n    1: setShowDob\n  } = useState(false);\n\n  const handleCloseDob = () => setShowDob(false);\n\n  const now = 35;\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(new Date());\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: \"DOB\",\n      dob: startDate\n    });\n    router.push('/gender');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(CssBaseline, null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      margin: '10px auto'\n    }\n  }, __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    animated: true,\n    striped: true,\n    variant: \"info\",\n    label: `${now}% Done`,\n    now: now\n  })), __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '40px'\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(\"h4\", {\n    className: \"header\"\n  }, \"What is your date of birth?\")), __jsx(Grid, {\n    container: true,\n    xs: 12,\n    sm: 12,\n    justify: \"center\",\n    spacing: 2\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"space-around\",\n    style: {\n      color: 'red'\n    }\n  }, __jsx(KeyboardDatePicker // disableToolbar\n  , {\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Date picker inline\",\n    value: startDate,\n    style: {\n      backgroundColor: 'red'\n    },\n    onChange: date => setStartDate(date),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    onClick: e => {\n      handleSubmit(e);\n    },\n    variant: \"outline-info\",\n    size: \"lg\"\n  }, \"Next\"))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"header font-weight-bold\"\n  }, \"Why do we ask about your date of birth?\\xA0\\xA0\", __jsx(QuestionCircle, {\n    size: 15,\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setShowDob(true);\n    }\n  }))), __jsx(Modal, {\n    show: showDob,\n    onHide: handleCloseDob\n  }, __jsx(Modal.Body, null, \"Life insurance companies use a method called \\u201Cage nearest\\u201D to determine the age the policy premiums are based upon. The age nearest method calculates the issue age based on the nearest age to your policy date. For example, if your date of birth is February 20th, 1984 and today\\u2019s date is January 20th, 2019, the issue age would be 35, even though your actual age is 34 and you won\\u2019t be 35 for another month.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-info\",\n    onClick: handleCloseDob\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["D:/Projects/insurdinary/components/DobForm.js"],"names":["React","useContext","useState","useRouter","DispatchContext","DatePicker","QuestionCircle","Modal","ProgressBar","Button","Form","Col","Row","Grid","Container","TextField","CssBaseline","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","DobForm","router","dispatch","showDob","setShowDob","handleCloseDob","now","startDate","setStartDate","Date","handleSubmit","e","preventDefault","type","dob","push","margin","height","marginTop","color","backgroundColor","date","width"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { DispatchContext } from \"../contexts/FormContext\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {QuestionCircle} from \"react-bootstrap-icons\";\r\nimport {Modal, ProgressBar, Button, Form, Col, Row} from \"react-bootstrap\";\r\nimport {Grid, Container, TextField, CssBaseline} from '@material-ui/core';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n  import 'date-fns';\r\n  import DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nexport default function DobForm() {\r\n    const router = useRouter();\r\n    const dispatch = useContext(DispatchContext);\r\n    const [showDob, setShowDob] = useState(false);\r\n    const handleCloseDob = () => setShowDob(false);\r\n\r\n    const now = 35;\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        dispatch({ type: \"DOB\", dob: startDate });\r\n        router.push('/gender');\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Grid item xs={12} style={{margin:'10px auto'}}>\r\n\t\t\t<ProgressBar style={{height: '0.5rem'}} animated striped variant=\"info\" label={`${now}% Done`} now={now} />\r\n\t\t\t</Grid>\r\n\t\t\t<Container maxWidth=\"sm\" style={{marginTop:'40px'}}>\r\n\t\t\t\t<Grid container justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t\t<h4 className='header'>What is your date of birth?</h4>\r\n\t\t\t\t</Grid>\r\n                <Grid container xs={12} sm={12} justify=\"center\" spacing={2}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <Grid container justify=\"space-around\" style={{color:'red'}}>\r\n                            <KeyboardDatePicker\r\n                                // disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Date picker inline\"\r\n                                value={startDate}\r\n                                style={{backgroundColor:'red'}}\r\n                                onChange={date => setStartDate(date)}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                        {/* <DatePicker\r\n                            selected={startDate}\r\n                            onChange={date => setStartDate(date)}\r\n                            className=\"dobCSS\"\r\n                        /> */}\r\n                </Grid>\r\n                <Grid container justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n                    <Grid item xs={12} sm={6} >\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            onClick={(e)=>{handleSubmit(e)}}\r\n                            variant=\"outline-info\"\r\n                            size=\"lg\"\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n\t\t\t\t\t<p className=\"header font-weight-bold\">Why do we ask about your date of birth?&nbsp;&nbsp;\r\n\t\t\t\t\t\t<QuestionCircle\r\n                            size={15}\r\n                            className=\"cursor-pointer\"\r\n\t\t\t\t\t\t\tonClick={() => {setShowDob(true)}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Grid>\r\n            {/*ask about children*/}\r\n            <Modal show={showDob} onHide={handleCloseDob}>\r\n                <Modal.Body>Life insurance companies use a method called “age nearest” to determine the age the policy premiums are based upon. The age nearest method calculates the issue age based on the nearest age to your policy date. For example, if your date of birth is February 20th, 1984 and today’s date is January 20th, 2019, the issue age would be 35, even though your actual age is 34 and you won’t be 35 for another month.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-info\" onClick={handleCloseDob}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}