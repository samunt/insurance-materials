{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { DispatchContext, FormContext } from \"../contexts/FormContext\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nimport { Modal, ProgressBar, Button } from \"react-bootstrap\";\nimport { Grid, Container, TextField, CssBaseline } from '@material-ui/core';\nexport default function GenderForm() {\n  const router = useRouter();\n  const dispatch = useContext(DispatchContext);\n  const {\n    0: sex,\n    1: setSex\n  } = useState();\n  const {\n    0: showSex,\n    1: setShowSex\n  } = useState(false);\n\n  const handleCloseSex = () => setShowSex(false);\n\n  const form = useContext(FormContext);\n  const now = 40; //get data from localstroage/redux and set State when component mounted\n\n  useEffect(() => {\n    if (form && sex !== form.sex) {\n      setSex(form.sex);\n    }\n  }, []);\n  useEffect(() => {\n    //highlight Male/Female button accourding to selected state\n    if (sex === \"Female\") {\n      document.getElementById('male-yes').classList.remove('active_button');\n      document.getElementById('female-yes').classList.add('active_button');\n    } else if (sex === 'Male') {\n      document.getElementById('female-yes').classList.remove('active_button');\n      document.getElementById('male-yes').classList.add('active_button');\n    } //dispatch data to localstroage/redux on change\n\n\n    dispatch({\n      type: \"SEX\",\n      sex: sex\n    });\n  }, [sex]);\n  return __jsx(React.Fragment, null, __jsx(CssBaseline, null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      margin: '10px auto'\n    }\n  }, __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    animated: true,\n    striped: true,\n    variant: \"info\",\n    label: `${now}% Done`,\n    now: now\n  })), __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '40px'\n    }\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(\"h4\", {\n    className: \"header\"\n  }, \"What is your sex?\")), __jsx(Grid, {\n    container: true,\n    item: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    id: \"male-yes\",\n    onClick: () => {\n      setSex('Male');\n      router.push('/tobacco');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"contained\",\n    size: \"lg\"\n  }, \"Male\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    id: \"female-yes\",\n    onClick: () => {\n      setSex('Female');\n      router.push('/tobacco');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"contained\",\n    size: \"lg\"\n  }, \"Female\"))), __jsx(Grid, {\n    container: true,\n    item: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"header font-weight-bold\"\n  }, \"Why do we ask about your sex?\\xA0\\xA0\", __jsx(QuestionCircle, {\n    size: 15,\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setShowSex(true);\n    }\n  }))), __jsx(Modal, {\n    show: showSex,\n    onHide: handleCloseSex\n  }, __jsx(Modal.Body, null, \"Men and women have different life expectancies, and therefore, insurers take gender into account when pricing life insurance policies.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"contained\",\n    onClick: handleCloseSex\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["D:/Projects/insurdinary/components/GenderForm.js"],"names":["React","useContext","useEffect","useState","useRouter","DispatchContext","FormContext","QuestionCircle","Modal","ProgressBar","Button","Grid","Container","TextField","CssBaseline","GenderForm","router","dispatch","sex","setSex","showSex","setShowSex","handleCloseSex","form","now","document","getElementById","classList","remove","add","type","margin","height","marginTop","push","width"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { DispatchContext, FormContext } from \"../contexts/FormContext\";\r\nimport {QuestionCircle} from \"react-bootstrap-icons\";\r\nimport {Modal, ProgressBar, Button} from \"react-bootstrap\";\r\nimport {Grid, Container, TextField, CssBaseline} from '@material-ui/core';\r\n\r\n\r\nexport default function GenderForm() {\r\n    const router = useRouter();\r\n    const dispatch = useContext(DispatchContext);\r\n    const [sex, setSex] = useState();\r\n    const [showSex, setShowSex] = useState(false);\r\n    const handleCloseSex = () => setShowSex(false);\r\n    const form = useContext(FormContext);\r\n\r\n\tconst now = 40;\r\n\r\n    //get data from localstroage/redux and set State when component mounted\r\n\tuseEffect(() => {\r\n        if(form && sex !== form.sex){\r\n\t\t\tsetSex(form.sex);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t//highlight Male/Female button accourding to selected state\r\n\t\tif(sex===\"Female\"){\r\n\t\t\tdocument.getElementById('male-yes').classList.remove('active_button');\r\n\t\t\tdocument.getElementById('female-yes').classList.add('active_button');\r\n\t\t}\r\n\t\telse if(sex==='Male'){\r\n\t\t\tdocument.getElementById('female-yes').classList.remove('active_button');\r\n\t\t\tdocument.getElementById('male-yes').classList.add('active_button');\r\n\t\t}\r\n\t\t//dispatch data to localstroage/redux on change\r\n\t\tdispatch({ type: \"SEX\", sex: sex });\r\n\t}, [sex]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Grid item xs={12} style={{margin:'10px auto'}}>\r\n\t\t\t\t<ProgressBar style={{height: '0.5rem'}} animated striped variant=\"info\" label={`${now}% Done`} now={now} />\r\n\t\t\t</Grid>\r\n\t\t\t<Container maxWidth=\"sm\" style={{marginTop:'40px'}}>\r\n\t\t\t\t<Grid container item justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t\t<h4 className='header'>What is your sex?</h4>\r\n\t\t\t\t</Grid>\r\n                <Grid container item justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\t\tid=\"male-yes\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetSex('Male');\r\n                                router.push('/tobacco');\r\n                            }}\r\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tMale\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\t\tid=\"female-yes\"\r\n\t\t\t\t\t\t\tonClick={ () => {\r\n                                setSex('Female')\r\n                                router.push('/tobacco');\r\n                            }}\r\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFemale\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n                <Grid container item justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n\t\t\t\t\t<p className=\"header font-weight-bold\">Why do we ask about your sex?&nbsp;&nbsp;\r\n\t\t\t\t\t\t<QuestionCircle\r\n\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t\tclassName=\"cursor-pointer\"\r\n\t\t\t\t\t\t\tonClick={() => {setShowSex(true)}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Grid>\r\n                {/*ask about sex*/}\r\n            <Modal show={showSex} onHide={handleCloseSex}>\r\n                <Modal.Body>Men and women have different life expectancies, and therefore, insurers take gender into account when pricing life insurance policies.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"contained\" onClick={handleCloseSex}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </Container>\r\n        </React.Fragment>\r\n)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}