{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nimport { Modal, ProgressBar, Button } from \"react-bootstrap\";\nimport { Grid, Container, CssBaseline, InputAdornment, makeStyles, Input, InputLabel, FormControl } from '@material-ui/core';\nexport default function rentOrOwnForm() {\n  const router = useRouter();\n  const dispatch = useContext(DispatchContext);\n  const {\n    0: lifeInsurance,\n    1: setLifeInsurance\n  } = useState(''); //has life insurance\n\n  const {\n    0: lifeInsuranceEmployer,\n    1: setLifeInsuranceEmployer\n  } = useState('');\n  const {\n    0: lifeInsurancePersonal,\n    1: setLifeInsurancePersonal\n  } = useState('');\n  const {\n    0: showHasLifeInsurance,\n    1: setShowHasLifeInsurance\n  } = useState(false);\n\n  const handleCloseHasLifeInsurance = () => setShowHasLifeInsurance(false);\n\n  const {\n    0: showExistingLifeInsurance,\n    1: setShowExistingLifeInsurance\n  } = useState(false);\n\n  const handleCloseExistingLifeInsurance = () => setShowExistingLifeInsurance(false); // progress bar\n\n\n  const now = 75;\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3)\n    },\n    textField: {\n      width: '25ch'\n    }\n  }));\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch({\n      type: \"LIFE_INSURANCE\",\n      lifeInsurance: lifeInsurance\n    });\n\n    if (lifeInsurance === false) {\n      dispatch({\n        type: \"LIFE_INSURANCE_EMPLOYER\",\n        lifeInsuranceEmployer: 0\n      });\n      dispatch({\n        type: \"LIFE_INSURANCE_PERSONAL\",\n        lifeInsurancePersonal: 0\n      });\n    }\n  }, [lifeInsurance]);\n  useEffect(() => {\n    dispatch({\n      type: \"LIFE_INSURANCE_EMPLOYER\",\n      lifeInsuranceEmployer: lifeInsuranceEmployer\n    });\n  }, [lifeInsuranceEmployer]);\n  useEffect(() => {\n    dispatch({\n      type: \"LIFE_INSURANCE_PERSONAL\",\n      lifeInsurancePersonal: lifeInsurancePersonal\n    });\n  }, [lifeInsurancePersonal]);\n  return __jsx(React.Fragment, null, __jsx(CssBaseline, null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      margin: '10px auto'\n    }\n  }, __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    animated: true,\n    striped: true,\n    variant: \"info\",\n    label: `${now}% Done`,\n    now: now\n  })), __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '40px'\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(\"h4\", {\n    className: \"header\"\n  }, \"Do you have life insurance?\\xA0\\xA0\", __jsx(QuestionCircle, {\n    size: 20,\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setShowHasLifeInsurance(true);\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: () => {\n      setLifeInsurance(true);\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-info\",\n    size: \"lg\"\n  }, \"Yes\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: () => {\n      setLifeInsurance(false);\n      router.push('/savings');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-info\",\n    size: \"lg\"\n  }, \"No\"))), lifeInsurance && __jsx(Grid, {\n    container: true,\n    xs: 12,\n    sm: 12,\n    justify: \"center\",\n    spacing: 2\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"header font-weight-bold\"\n  }, \"Employer Life Insurance\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.margin\n  }, __jsx(InputLabel, {\n    htmlFor: \"standard-adornment-amount\"\n  }, \"Employer Life Insurance\"), __jsx(Input, {\n    id: \"standard-adornment-amount\",\n    value: lifeInsuranceEmployer,\n    type: \"number\",\n    onChange: e => {\n      setLifeInsuranceEmployer(parseInt(e.target.value));\n    },\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\"\n    }, \"$\")\n  }))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"header font-weight-bold\"\n  }, \"Personal Life Insurance\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.margin\n  }, __jsx(InputLabel, {\n    htmlFor: \"standard-adornment-amount\"\n  }, \"Personal Life Insurance\"), __jsx(Input, {\n    id: \"standard-adornment-amount\",\n    value: lifeInsurancePersonal,\n    type: \"number\",\n    onChange: e => {\n      setLifeInsurancePersonal(parseInt(e.target.value));\n    },\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\"\n    }, \"$\")\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: () => {\n      router.push('/savings');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-info\",\n    size: \"lg\"\n  }, \"Next\"))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"header font-weight-bold\"\n  }, \"Why do you ask about my existing life insurance?\\xA0\\xA0\", __jsx(QuestionCircle, {\n    size: 15,\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setShowExistingLifeInsurance(true);\n    }\n  }))), __jsx(Modal, {\n    show: showHasLifeInsurance,\n    onHide: handleCloseHasLifeInsurance\n  }, __jsx(Modal.Body, null, \"Select \\u201CYes\\u201D if you already have life insurance coverage in place, but select \\u201CNo\\u201D if you don\\u2019t have existing life insurance or if your policies are expiring soon. This would include both policies you have through work or policies that you\\u2019ve purchased individually through a broker.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-info\",\n    onClick: handleCloseHasLifeInsurance\n  }, \"Close\"))), __jsx(Modal, {\n    show: showExistingLifeInsurance,\n    onHide: handleCloseExistingLifeInsurance\n  }, __jsx(Modal.Body, null, \"If you already have life insurance, we will reduce the coverage amount of your new policy by the amount of coverage already in place. This will make sure that the total amount of coverage between all your policies is in line with your needs.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-info\",\n    onClick: handleCloseExistingLifeInsurance\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["D:/Projects/insurdinary/components/LifeInsuranceForm.js"],"names":["React","useContext","useEffect","useState","useRouter","DispatchContext","QuestionCircle","Modal","ProgressBar","Button","Grid","Container","CssBaseline","InputAdornment","makeStyles","Input","InputLabel","FormControl","rentOrOwnForm","router","dispatch","lifeInsurance","setLifeInsurance","lifeInsuranceEmployer","setLifeInsuranceEmployer","lifeInsurancePersonal","setLifeInsurancePersonal","showHasLifeInsurance","setShowHasLifeInsurance","handleCloseHasLifeInsurance","showExistingLifeInsurance","setShowExistingLifeInsurance","handleCloseExistingLifeInsurance","now","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","classes","type","height","push","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { DispatchContext } from \"../contexts/FormContext\";\r\nimport {QuestionCircle} from \"react-bootstrap-icons\";\r\nimport {Modal, ProgressBar, Button} from \"react-bootstrap\";\r\nimport {Grid, Container, CssBaseline, InputAdornment, makeStyles, Input, InputLabel, FormControl} from '@material-ui/core';\r\n\r\nexport default function rentOrOwnForm() {\r\n    const router = useRouter();\r\n    const dispatch = useContext(DispatchContext);\r\n    const [lifeInsurance, setLifeInsurance] = useState('');\r\n    //has life insurance\r\n    const [lifeInsuranceEmployer, setLifeInsuranceEmployer] = useState('');\r\n    const [lifeInsurancePersonal, setLifeInsurancePersonal] = useState('');\r\n    const [showHasLifeInsurance, setShowHasLifeInsurance] = useState(false);\r\n    const handleCloseHasLifeInsurance = () => setShowHasLifeInsurance(false);\r\n    const [showExistingLifeInsurance, setShowExistingLifeInsurance] = useState(false);\r\n    const handleCloseExistingLifeInsurance = () => setShowExistingLifeInsurance(false);\r\n\r\n    // progress bar\r\n    const now = 75;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t  display: 'flex',\r\n\t\t  flexWrap: 'wrap',\r\n\t\t},\r\n\t\tmargin: {\r\n\t\t  margin: theme.spacing(1),\r\n\t\t},\r\n\t\twithoutLabel: {\r\n\t\t  marginTop: theme.spacing(3),\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t  width: '25ch',\r\n\t\t},\r\n\t}));\r\n\t\r\n    const classes = useStyles();\r\n    \r\n    useEffect(() => {\r\n        dispatch({ type: \"LIFE_INSURANCE\", lifeInsurance: lifeInsurance });\r\n        if (lifeInsurance === false) {\r\n            dispatch({ type: \"LIFE_INSURANCE_EMPLOYER\", lifeInsuranceEmployer: 0 });\r\n            dispatch({ type: \"LIFE_INSURANCE_PERSONAL\", lifeInsurancePersonal: 0 });\r\n        }\r\n    }, [lifeInsurance]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"LIFE_INSURANCE_EMPLOYER\", lifeInsuranceEmployer: lifeInsuranceEmployer });\r\n    }, [lifeInsuranceEmployer]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"LIFE_INSURANCE_PERSONAL\", lifeInsurancePersonal: lifeInsurancePersonal });\r\n    }, [lifeInsurancePersonal]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\t\t<CssBaseline />\r\n\t\t<Grid item xs={12} style={{margin:'10px auto'}}>\r\n\t\t\t<ProgressBar style={{height: '0.5rem'}} animated striped variant=\"info\" label={`${now}% Done`} now={now} />\r\n\t\t</Grid>\r\n\t\t<Container maxWidth=\"sm\" style={{marginTop:'40px'}}>\r\n\t\t\t<Grid container justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t<h4 className='header'>Do you have life insurance?&nbsp;&nbsp;\r\n                    <QuestionCircle\r\n                        size={20}\r\n                        className=\"cursor-pointer\"\r\n                        onClick={() => {setShowHasLifeInsurance(true)}}\r\n                    />\r\n                </h4>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\tonClick={() => {\r\n                            setLifeInsurance(true);\r\n                        }}\r\n\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\tvariant=\"outline-info\"\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tYes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\tonClick={() => {\r\n                            setLifeInsurance(false);\r\n                            router.push('/savings');\r\n                        }}\r\n\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\tvariant=\"outline-info\"\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{lifeInsurance && <Grid container xs={12} sm={12} justify=\"center\" spacing={2}>\r\n\t\t\t\t<Grid container justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n\t\t\t\t\t<p className=\"header font-weight-bold\">Employer Life Insurance</p>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"standard-adornment-amount\">Employer Life Insurance</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"standard-adornment-amount\"\r\n\t\t\t\t\t\t\tvalue={lifeInsuranceEmployer}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n                                setLifeInsuranceEmployer(parseInt(e.target.value))\r\n                            }}\r\n\t\t\t\t\t\t\tstartAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n                <Grid container justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n\t\t\t\t\t<p className=\"header font-weight-bold\">Personal Life Insurance</p>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t<FormControl fullWidth className={classes.margin}>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"standard-adornment-amount\">Personal Life Insurance</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"standard-adornment-amount\"\r\n\t\t\t\t\t\t\tvalue={lifeInsurancePersonal}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tonChange={(e) => {setLifeInsurancePersonal(parseInt(e.target.value))}}\r\n\t\t\t\t\t\t\tstartAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\tonClick={()=> {router.push('/savings')}}\r\n\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\tvariant=\"outline-info\"\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>}\r\n\t\t\t<Grid container justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n                <p className=\"header font-weight-bold\">Why do you ask about my existing life insurance?&nbsp;&nbsp;\r\n                    <QuestionCircle\r\n                        size={15}\r\n                        className=\"cursor-pointer\"\r\n                        onClick={() => {setShowExistingLifeInsurance(true)}}\r\n                    />\r\n                </p>\r\n\t\t\t</Grid>\r\n\t\t\t{/*title*/}\r\n            <Modal show={showHasLifeInsurance} onHide={handleCloseHasLifeInsurance}>\r\n                <Modal.Body>Select “Yes” if you already have life insurance coverage in place, but select “No” if you don’t have existing life insurance or if your policies are expiring soon. This would include both policies you have through work or policies that you’ve purchased individually through a broker.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-info\" onClick={handleCloseHasLifeInsurance}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/*ask about existing insurance*/}\r\n            <Modal show={showExistingLifeInsurance} onHide={handleCloseExistingLifeInsurance}>\r\n                <Modal.Body>If you already have life insurance, we will reduce the coverage amount of your new policy by the amount of coverage already in place. This will make sure that the total amount of coverage between all your policies is in line with your needs.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-info\" onClick={handleCloseExistingLifeInsurance}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}