{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nimport { Modal, ProgressBar, Button } from \"react-bootstrap\";\nimport { Grid, Container, CssBaseline } from '@material-ui/core';\nexport default function TobaccoForm() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useContext(DispatchContext);\n\n  var _useState = useState(false),\n      showNicotine = _useState[0],\n      setShowNicotine = _useState[1];\n\n  var _useState2 = useState(),\n      tobacco = _useState2[0],\n      setTobacco = _useState2[1];\n\n  var handleCloseNicotine = function handleCloseNicotine() {\n    return setShowNicotine(false);\n  };\n\n  var _useState3 = useState(false),\n      showUsedToSmoke = _useState3[0],\n      setShowUsedToSmoke = _useState3[1];\n\n  var handleCloseUsedToSmoke = function handleCloseUsedToSmoke() {\n    return setShowUsedToSmoke(false);\n  };\n\n  useEffect(function () {\n    var info = JSON.parse(localStorage.getItem('form'));\n\n    if (info && tobacco !== info.tobacco) {\n      setTobacco(info.tobacco);\n    }\n  }, []);\n  useEffect(function () {\n    if (tobacco === true) {\n      dispatch({\n        type: \"TOBACCO\",\n        tobacco: true\n      });\n      document.getElementById('tobacco-no').classList.remove('active_button');\n      document.getElementById('tobacco-yes').classList.add('active_button');\n    } else if (tobacco === false) {\n      dispatch({\n        type: \"TOBACCO\",\n        tobacco: false\n      });\n      document.getElementById('tobacco-yes').classList.remove('active_button');\n      document.getElementById('tobacco-no').classList.add('active_button');\n    }\n  }, [tobacco]);\n  var now = 50;\n  return __jsx(React.Fragment, null, __jsx(CssBaseline, null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      margin: '10px auto'\n    }\n  }, __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    animated: true,\n    striped: true,\n    variant: \"info\",\n    label: \"\".concat(now, \"% Done\"),\n    now: now\n  })), __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '40px'\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(\"h4\", {\n    className: \"header\"\n  }, \"Do you smoke or use nicotine products?\\xA0\\xA0\", __jsx(QuestionCircle, {\n    size: 30,\n    className: \"cursor-pointer\",\n    onClick: function onClick() {\n      setShowNicotine(true);\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    id: \"tobacco-yes\",\n    onClick: function onClick() {\n      router.push('/healthCondition');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"contained\",\n    size: \"lg\"\n  }, \"Yes\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    className: \"align-button\",\n    id: \"tobacco-no\",\n    onClick: function onClick() {\n      dispatch({\n        type: \"TOBACCO\",\n        tobacco: false\n      });\n      router.push('/healthCondition');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"contained\",\n    size: \"lg\"\n  }, \"No\"))), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"header font-weight-bold\"\n  }, \"What if I used to smoke?\\xA0\\xA0\", __jsx(QuestionCircle, {\n    size: 15,\n    className: \"cursor-pointer\",\n    onClick: function onClick() {\n      setShowUsedToSmoke(true);\n    }\n  }))), __jsx(Modal, {\n    show: showNicotine,\n    onHide: handleCloseNicotine\n  }, __jsx(Modal.Body, null, \"Select \\u201CYes\\u201D if you\\u2019ve used any nicotine products in the past year. Nicotine products include cigarettes, e-cigarettes, cigars, pipes, chewing tobacco, nicotine gum or patches, etc.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"contained\",\n    onClick: handleCloseNicotine\n  }, \"Close\"))), __jsx(Modal, {\n    show: showUsedToSmoke,\n    onHide: handleCloseUsedToSmoke\n  }, __jsx(Modal.Body, null, \"An insurance company will consider you a smoker only if you have engaged in smoking over the last 12 months. So if you quit smoking over a year ago, we have good news for you: No matter how long you were smoking for or how often you were smoking, you can specify \\u201CNo\\u201D for this question. Your life insurance premiums will be the same as those for a non-smoker! Wasn\\u2019t that an unexpected surprise?\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"contained\",\n    onClick: handleCloseUsedToSmoke\n  }, \"Close\")))));\n}\n\n_s(TobaccoForm, \"zEmRa6Z3G4LVx2t1zcvI41fOfOQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = TobaccoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TobaccoForm\");","map":{"version":3,"sources":["D:/Projects/insurdinary/components/TobaccoForm.js"],"names":["React","useContext","useState","useEffect","useRouter","DispatchContext","QuestionCircle","Modal","ProgressBar","Button","Grid","Container","CssBaseline","TobaccoForm","router","dispatch","showNicotine","setShowNicotine","tobacco","setTobacco","handleCloseNicotine","showUsedToSmoke","setShowUsedToSmoke","handleCloseUsedToSmoke","info","JSON","parse","localStorage","getItem","type","document","getElementById","classList","remove","add","now","margin","height","marginTop","push","width"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { DispatchContext } from \"../contexts/FormContext\";\r\nimport {QuestionCircle} from \"react-bootstrap-icons\";\r\nimport {Modal, ProgressBar, Button} from \"react-bootstrap\";\r\nimport {Grid, Container, CssBaseline} from '@material-ui/core';\r\n\r\nexport default function TobaccoForm() {\r\n    const router = useRouter();\r\n    const dispatch = useContext(DispatchContext);\r\n    const [showNicotine, setShowNicotine] = useState(false);\r\n    const [tobacco, setTobacco] = useState();\r\n    const handleCloseNicotine = () => setShowNicotine(false);\r\n    const [showUsedToSmoke, setShowUsedToSmoke] = useState(false);\r\n    const handleCloseUsedToSmoke = () => setShowUsedToSmoke(false);\r\n\r\n\tuseEffect(() => {\r\n        let info = JSON.parse(localStorage.getItem('form'));\r\n        if(info && tobacco !== info.tobacco){\r\n\t\t\tsetTobacco(info.tobacco);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(tobacco === true){\r\n\t\t\tdispatch({ type: \"TOBACCO\", tobacco: true });\r\n\t\t\tdocument.getElementById('tobacco-no').classList.remove('active_button');\r\n\t\t\tdocument.getElementById('tobacco-yes').classList.add('active_button');\r\n\t\t}\r\n\t\telse if(tobacco === false){\r\n\t\t\tdispatch({ type: \"TOBACCO\", tobacco: false });\r\n\t\t\tdocument.getElementById('tobacco-yes').classList.remove('active_button');\r\n\t\t\tdocument.getElementById('tobacco-no').classList.add('active_button');\r\n\t\t}\r\n\t}, [tobacco]);\r\n\r\n    const now = 50;\r\n\r\n    return (\r\n        <React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Grid item xs={12} style={{margin:'10px auto'}}>\r\n\t\t\t\t<ProgressBar style={{height: '0.5rem'}} animated striped variant=\"info\" label={`${now}% Done`} now={now} />\r\n\t\t\t</Grid>\r\n\t\t\t<Container maxWidth=\"sm\" style={{marginTop:'40px'}}>\r\n            \t<Grid container justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t\t<h4 className='header'>Do you smoke or use nicotine products?&nbsp;&nbsp;\r\n\t\t\t\t\t\t<QuestionCircle\r\n\t\t\t\t\t\t\tsize={30}\r\n\t\t\t\t\t\t\tclassName=\"cursor-pointer\"\r\n\t\t\t\t\t\t\tonClick={() => {setShowNicotine(true)}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t</Grid>\r\n                <Grid container justify=\"center\" xs={12} sm={12} spacing={2}>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\t\tid=\"tobacco-yes\"\r\n\t\t\t\t\t\t\tonClick={ () => {\r\n                                router.push('/healthCondition');\r\n                            }}\r\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} >\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"align-button\"\r\n\t\t\t\t\t\t\tid=\"tobacco-no\"\r\n\t\t\t\t\t\t\tonClick={ () => {\r\n                                dispatch({ type: \"TOBACCO\", tobacco: false });\r\n                                router.push('/healthCondition');\r\n                            }}\r\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n                <Grid container justify=\"center\" xs={12} sm={12} spacing={2} className=\"mt-4\">\r\n\t\t\t\t\t<p className=\"header font-weight-bold\">What if I used to smoke?&nbsp;&nbsp;\r\n\t\t\t\t\t\t<QuestionCircle\r\n\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t\tclassName=\"cursor-pointer\"\r\n\t\t\t\t\t\t\tonClick={() => {setShowUsedToSmoke(true)}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Grid>\r\n                {/*ask about nicotine*/}\r\n            <Modal show={showNicotine} onHide={handleCloseNicotine}>\r\n                <Modal.Body>Select “Yes” if you’ve used any nicotine products in the past year. Nicotine products include cigarettes, e-cigarettes, cigars, pipes, chewing tobacco, nicotine gum or patches, etc.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"contained\" onClick={handleCloseNicotine}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/*ask about used to smoke*/}\r\n            <Modal show={showUsedToSmoke} onHide={handleCloseUsedToSmoke}>\r\n                <Modal.Body>An insurance company will consider you a smoker only if you have engaged in smoking over the last 12 months. So if you quit smoking over a year ago, we have good news for you: No matter how long you were smoking for or how often you were smoking, you can specify “No” for this question. Your life insurance premiums will be the same as those for a non-smoker! Wasn’t that an unexpected surprise?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"contained\" onClick={handleCloseUsedToSmoke}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}